/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/error": {
    get: operations["handlerUsingGET"];
    put: operations["handlerUsingPUT"];
    post: operations["handlerUsingPOST"];
    delete: operations["handlerUsingDELETE"];
    options: operations["handlerUsingOPTIONS"];
    head: operations["handlerUsingHEAD"];
    patch: operations["handlerUsingPATCH"];
  };
  "/rule/queryAndUpdateMsgRuleMap": {
    post: operations["queryAndUpdateMsgRuleMapUsingPOST"];
  };
  "/test": {
    post: operations["testUsingPOST"];
  };
  "/test2": {
    post: operations["test2UsingPOST"];
  };
  "/user/msg/countUnRead": {
    post: operations["countUnReadUsingPOST"];
  };
  "/user/msg/countUnReadByAppId/{appId}": {
    post: operations["countUnReadByAppIdUsingPOST"];
  };
  "/user/msg/countUnReadByTargetType": {
    post: operations["countUnReadByTargetTypeUsingPOST"];
  };
  "/user/msg/deleteAll": {
    post: operations["deleteAllUsingPOST"];
  };
  "/user/msg/deleteAllByAppId/{appId}": {
    post: operations["deleteAllByAppIdUsingPOST"];
  };
  "/user/msg/deleteBatch": {
    post: operations["deleteBatchUsingPOST"];
  };
  "/user/msg/deleteBatchByAppId/{appId}": {
    post: operations["deleteBatchByAppIdUsingPOST"];
  };
  "/user/msg/listPager": {
    post: operations["listPagerUsingPOST"];
  };
  "/user/msg/listPagerByAppId/{appId}": {
    post: operations["listPagerByAppIdUsingPOST"];
  };
  "/user/msg/updateRead": {
    post: operations["updateReadUsingPOST"];
  };
  "/user/msg/updateReadByAppId/{appId}": {
    post: operations["updateReadByAppIdUsingPOST"];
  };
  "/user/msg/updateReadSingle/{appId}/{id}": {
    post: operations["updateReadSingleUsingPOST"];
  };
}

export interface definitions {
  /** MsgCountVo */
  MsgCountVo: {
    /**
     * Format: int32
     * @description 消息目标类型数量
     */
    count?: number;
    /** @description 消息目标类型 */
    targetType?: string;
  };
  /** PagerQueryBodyModel */
  PagerQueryBodyModel: {
    dir?: string;
    /** Format: int32 */
    limit?: number;
    /** Format: int32 */
    page?: number;
    sort?: string;
  };
  /** PagerQueryBody«UserMsgFilter» */
  "PagerQueryBody«UserMsgFilter»": {
    filter?: definitions["UserMsgFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** Pager«UserMsgListVo» */
  "Pager«UserMsgListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["UserMsgListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** ResultEntity«List«MsgCountVo»» */
  "ResultEntity«List«MsgCountVo»»": {
    code?: string;
    data?: definitions["MsgCountVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«UserMsgListVo»» */
  "ResultEntity«Pager«UserMsgListVo»»": {
    code?: string;
    data?: definitions["Pager«UserMsgListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«boolean» */
  "ResultEntity«boolean»": {
    code?: string;
    data?: boolean;
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«long» */
  "ResultEntity«long»": {
    code?: string;
    /** Format: int64 */
    data?: number;
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«object» */
  "ResultEntity«object»": {
    code?: string;
    data?: { [key: string]: unknown };
    msg?: string;
    success?: boolean;
  };
  /** UserMsgFilter */
  UserMsgFilter: {
    /** @description 消息内容 */
    content?: string;
    /**
     * Format: date-time
     * @description 接收时间-结束
     */
    endTime?: string;
    /**
     * Format: int32
     * @description 是否已读，0未读,1已读
     */
    isRead?: number;
    /**
     * Format: date-time
     * @description 接收时间-开始
     */
    startTime?: string;
    /** @description 消息目标类型，如果消息类型为1（提醒）时页面上才展示，现阶段直接展示 */
    targetType?: string;
    /** @description 消息目标类型，一次查询多种类型 */
    targetTypeList?: string[];
    /**
     * Format: int32
     * @description 消息类型，现阶段页面可以不展示，默认要传1
     */
    type?: number;
  };
  /** UserMsgListVo */
  UserMsgListVo: {
    /**
     * Format: int64
     * @description 应用id
     */
    appId?: number;
    /** @description 消息内容,如果类型为1,将rule中的模板编译好后带过来,如果类型为2或3,直接是消息内容，必传不能为空 */
    content: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /** @description 扩展字段，非必传 */
    expand?: string;
    /** Format: int64 */
    id?: number;
    /**
     * Format: int32
     * @description 0未读,1已读
     */
    isRead?: number;
    /**
     * Format: int64
     * @description 发送人,类型为3时不为空，非必传
     */
    sender?: number;
    /** @description 提醒目标id,如果类型为1时不为空，非必传 */
    targetId?: string;
    /** @description 提醒目标类型 */
    targetType?: string;
    /**
     * Format: int32
     * @description 消息类型,1:提醒,2:公告,3:私信，必传不能为空
     */
    type: number;
    /**
     * Format: int64
     * @description 用户id
     */
    userId?: number;
  };
}

export interface operations {
  handlerUsingGET: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPUT: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingDELETE: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingOPTIONS: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingHEAD: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingPATCH: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  queryAndUpdateMsgRuleMapUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  testUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  test2UsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  countUnReadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«long»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  countUnReadByAppIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«long»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  countUnReadByTargetTypeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        targetTypeList?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«MsgCountVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteAllUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteAllByAppIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteBatchUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 用户消息id列表 */
        ids: number[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteBatchByAppIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
      };
      body: {
        /** 用户消息id列表 */
        ids: number[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listPagerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«UserMsgFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«UserMsgListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listPagerByAppIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«UserMsgFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«UserMsgListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateReadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateReadByAppIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateReadSingleUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** appId */
        appId: number;
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
