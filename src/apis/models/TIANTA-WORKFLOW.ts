/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/flow/addMultiInstance": {
    /** 加签 */
    post: operations["addMultiInstanceUsingPOST"];
  };
  "/api/flow/backTask": {
    /** 回退到上一节点 */
    post: operations["backTaskUsingPOST"];
  };
  "/api/flow/backTaskToStart": {
    /** 撤回到发起人 */
    post: operations["backTaskToStartUsingPOST"];
  };
  "/api/flow/combineCommentInfosByProcessInstanceId/{processInstanceId}": {
    /** 合并流程审批记录 */
    post: operations["combineCommentInfosByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/complete": {
    /** 审批 */
    post: operations["completeUsingPOST"];
  };
  "/api/flow/copyByMe": {
    /** 查询抄送我的 */
    post: operations["copyByMeUsingPOST"];
  };
  "/api/flow/deleteMultiInstance/{taskId}": {
    /** 减签 */
    post: operations["deleteMultiInstanceUsingPOST"];
  };
  "/api/flow/getActiveActivityIds/{processInstanceId}": {
    /** 获取当前流程活动节点 */
    post: operations["getActiveActivityIdsUsingPOST"];
  };
  "/api/flow/getAppingTasks": {
    /** 查询我的待办任务列表 */
    post: operations["getAppingTasksUsingPOST"];
  };
  "/api/flow/getApplyedTasks": {
    /** 查询我的已办任务 */
    post: operations["getApplyedTasksUsingPOST"];
  };
  "/api/flow/getCommentInfosByProcessInstanceId": {
    /** 查询当前流程的审批记录 */
    post: operations["getCommentInfosByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getCopyInfoByProcessInstanceId": {
    /** 查询流程实例抄送信息 */
    post: operations["getCopyInfoByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getCurUserTasksListByProcessInstanceId/{processInstanceId}": {
    /** 通过流程实例id获取当前用户任务taskId */
    post: operations["getCurUserTasksListByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getHighLightedNodeByProcessInstanceId": {
    /** 获取当前流程高亮线和节点 */
    post: operations["getHighLightedNodeByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getHistoryTask/{processInstanceId}": {
    /** 查询多任务节点历史已办理人信息 */
    post: operations["getHistoryTaskUsingPOST"];
  };
  "/api/flow/getProcessInfoByInstanceId": {
    /** 通过流程实例id获取流程信息 */
    post: operations["getProcessInfoByBusinessKeyUsingPOST"];
  };
  "/api/flow/getProcessInstanceId/{modelKey}/{businessKey}": {
    /** 获取流程实例id */
    post: operations["getProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getProcessInstanceList": {
    /** 获取流程列表 */
    post: operations["getProcessInstanceListUsingPOST"];
  };
  "/api/flow/getTasksByTaskId/{taskId}": {
    /** 通过taskId判断任务是否存在 */
    post: operations["getTasksByTaskIdUsingPOST"];
  };
  "/api/flow/getTasksListByProcessInstanceId/{processInstanceId}": {
    /** 通过流程实例id获取当前流程所有任务 */
    post: operations["getTasksListByProcessInstanceIdUsingPOST"];
  };
  "/api/flow/getTasksListByProcessInstanceId/{processInstanceId}/{activityId}": {
    /** 通过流程id查询当前节点所有任务 */
    post: operations["getTasksListByProcessInstanceIdAndActivityIdUsingPOST"];
  };
  "/api/flow/queryRule": {
    /** 查询选人规则 */
    post: operations["approveAfterQueryRuleUsingPOST"];
  };
  "/api/flow/startByMe": {
    /** 查询我发起的 */
    post: operations["startByMeUsingPOST"];
  };
  "/api/flow/startProcessInstanceByKey": {
    /** 启动流程 */
    post: operations["startProcessInstanceByKeyUsingPOST"];
  };
  "/api/flow/stopProcess": {
    /** 终止流程 */
    post: operations["stopProcessUsingPOST"];
  };
  "/api/flow/taskToUser": {
    /** 任务转办 */
    post: operations["taskToUserUsingPOST"];
  };
  "/error": {
    get: operations["handlerUsingGET"];
    put: operations["handlerUsingPUT"];
    post: operations["handlerUsingPOST"];
    delete: operations["handlerUsingDELETE"];
    options: operations["handlerUsingOPTIONS"];
    head: operations["handlerUsingHEAD"];
    patch: operations["handlerUsingPATCH"];
  };
  "/flow/bpmn/deployBpmn": {
    /** 流程部署 */
    post: operations["deployBpmnUsingPOST"];
  };
  "/flow/bpmn/getBpmnByModelId/{modelId}": {
    /** 根据id查询模型数据xml */
    post: operations["getBpmnByModelIdUsingPOST"];
  };
  "/flow/bpmn/saveBpmnModel": {
    /** 更新模型设计完流程图后更新 */
    post: operations["saveBpmnModelUsingPOST"];
  };
  "/flow/busi/{processInstanceId}": {
    /** 业务表单数据 */
    post: operations["busiDataUsingPOST"];
  };
  "/flow/category/add": {
    /** 新增流程分类 */
    post: operations["addUsingPOST"];
  };
  "/flow/category/delete/{id}": {
    /** 根据id删除数据 */
    post: operations["deleteUsingPOST"];
  };
  "/flow/category/list": {
    /** 查询流程类型数据列表(不分页) */
    post: operations["listUsingPOST"];
  };
  "/flow/category/listPager": {
    /** 查询流程类型数据列表(分页) */
    post: operations["listPagerUsingPOST"];
  };
  "/flow/category/load/{id}": {
    /** 根据id查询单条数据 */
    post: operations["loadUsingPOST"];
  };
  "/flow/category/update": {
    /** 更新数据 */
    post: operations["updateUsingPOST"];
  };
  "/flow/comment/addComment": {
    /** 增加流程评论 */
    post: operations["addCommentUsingPOST"];
  };
  "/flow/comment/comments/delete/{id}": {
    /** 父级审批，级联删除 */
    post: operations["deleteUsingPOST_1"];
  };
  "/flow/comment/comments/{processInstanceId}": {
    /** 查看评论 */
    post: operations["commentsUsingPOST"];
  };
  "/flow/modelInfo/listPager": {
    /** 查询模型列表(分页) */
    post: operations["listPagerUsingPOST_1"];
  };
  "/flow/modelInfo/load/{id}": {
    /** 根据id查询单条模型数据 */
    post: operations["loadUsingPOST_1"];
  };
  "/hhh/{name}": {
    post: operations["hhhUsingPOST"];
  };
  "/oper/flow/copyByMe": {
    /** 查询转阅/分享我的 */
    post: operations["shareMeUsingPOST"];
  };
  "/oper/flow/processToUser/{processInstanceId}/{userId}": {
    /** 流程分享/转阅他人 */
    post: operations["processToUserUsingPOST"];
  };
  "/tt": {
    post: operations["testRestTemplateUsingPOST"];
  };
}

export interface definitions {
  /** ActHiTaskListVo */
  ActHiTaskListVo: {
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 审批时间 */
    approveTime?: string;
    /** @description 审批人工号 */
    assignee?: string;
    /** @description 审批人名称 */
    assigneeName?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /**
     * Format: date-time
     * @description 任务创建时间
     */
    createTime?: string;
    /**
     * Format: date-time
     * @description 流程结束时间
     */
    endTime?: string;
    /** @description 表单名称 */
    formName?: string;
    /** @description 审批意见 */
    message?: string;
    /** @description 任务名称 */
    name?: string;
    /** @description 流程实例父id */
    parentId?: string;
    /** @description 流程定义id */
    processDefinitionId?: string;
    /** @description 流程实例的id */
    processInstanceId?: string;
    /**
     * Format: date-time
     * @description 流程创建时间
     */
    startTime?: string;
    /** @description 流程创建人工号 */
    startUserId?: string;
    /** @description 流程创建人名称 */
    startUserName?: string;
    /** @description 任务定义key */
    taskDefKey?: string;
    /** @description 任务id */
    taskId?: string;
    /** @description 流程分类 */
    taskType?: string;
    /**
     * Format: int32
     * @description 审批类型 1 审批 ，2 驳回 ，3 提交 ，4 重新提交 ，5 审批结束 ，6 流程终止
     */
    type?: number;
  };
  /** ActRuTaskListVo */
  ActRuTaskListVo: {
    /**
     * Format: int32
     * @description 系统标识
     */
    appId?: number;
    /** @description 审批人工号 */
    assignee?: string;
    /** @description 审批人名称 */
    assigneeName?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /**
     * Format: date-time
     * @description 任务创建时间
     */
    createTime?: string;
    /** @description 表单名称 */
    formName?: string;
    /** @description 任务名称 */
    name?: string;
    /** @description 流程实例父id */
    parentId?: string;
    /** @description 流程定义id */
    processDefinitionId?: string;
    /** @description 流程实例的id */
    processInstanceId?: string;
    /**
     * Format: date-time
     * @description 流程创建时间
     */
    startTime?: string;
    /** @description 流程创建人工号 */
    startUserId?: string;
    /** @description 流程创建人名称 */
    startUserName?: string;
    /**
     * Format: int32
     * @description 任务状态 1.审批中 2.驳回 3.撤回 4.终止 5.办结
     */
    status?: number;
    /** @description 任务定义key */
    taskDefKey?: string;
    /** @description 任务id */
    taskId?: string;
    /** @description 任务分类 */
    taskType?: string;
  };
  /** ActTaskFilter */
  ActTaskFilter: {
    /** @description 应用id */
    appIds?: number[];
    /** @description 业务主键 */
    businessKey?: string;
    /**
     * Format: int64
     * @description 流程类型id
     */
    categoryId?: number;
    /** @description 结束时间 */
    endTime?: string;
    /** @description 查询关键字，对应流程启动时候设定的名称 项目名称 */
    keyWord?: string;
    /** @description 开始时间 */
    startTime?: string;
    /**
     * Format: int64
     * @description 流程发起人
     */
    startUserId?: number;
    /**
     * Format: int32
     * @description 门户页面tab 0 非再次提交 2 再次提交
     */
    tab?: number;
    /** @description 节点名称 */
    taskName?: string;
    /**
     * Format: int32
     * @description 审批类型 1 审批 ，2 驳回 ，3 提交 ，4 重新提交 ，5 审批结束 ，6 流程终止
     */
    type?: number;
  };
  /** AddMultiInstanceDto */
  AddMultiInstanceDto: {
    /** @description 流程实例id */
    processInstanceId?: string;
    /** @description 加签任务分配人 */
    userIds?: string[];
  };
  /** BackTaskDto */
  BackTaskDto: {
    /** @description 驳回意见 */
    message?: string;
    /** @description 任务id */
    taskId?: string;
  };
  /** CommentDto */
  CommentDto: {
    /** @description 评论内容 */
    content?: string;
    /** @description 文件ids */
    fileActualIds?: string[];
    /**
     * Format: int64
     * @description 评论父id
     */
    parentCommentId?: number;
    /** @description 流程实例id */
    processInstanceId?: string;
  };
  /** CommentInfosVo */
  CommentInfosVo: {
    /**
     * Format: int32
     * @description 操作动作
     */
    action?: number;
    /** @description 审批节点名称 */
    activitName?: string;
    /** @description 任务归属人 */
    assignees?: string;
    /** @description 任务归属人名称 */
    assignessName?: string;
    /** @description 表决结果文字说明 */
    busiVoteMsg?: string;
    /**
     * Format: int32
     * @description 表决结果
     */
    busiVoteResult?: number;
    /** @description 是否多任务节点 */
    combineNode?: boolean;
    /** @description 审批附件 */
    commentFiles?: definitions["DataListVo"][];
    details?: { [key: string]: unknown }[];
    /**
     * Format: int32
     * @description 隐藏审批意见
     */
    hideApproveMessage?: number;
    /** @description 内容 */
    message?: string;
    /**
     * Format: int32
     * @description 数据状态  1 已完成 0 待完成
     */
    status?: number;
    /**
     * Format: date-time
     * @description 操作时间
     */
    time?: string;
    /** @description 是否有转办 */
    toUser?: boolean;
    /**
     * Format: int64
     * @description 操作人
     */
    userId?: number;
    /** @description 操作人中文名称 */
    userName?: string;
  };
  /** CommentVo */
  CommentVo: {
    childrens?: definitions["CommentVo"][];
    content?: string;
    /** Format: int64 */
    createBy?: number;
    createName?: string;
    /** Format: date-time */
    createTime?: string;
    fileList?: definitions["DataListVo"][];
    /** Format: int64 */
    id?: number;
    /** Format: int64 */
    parentCommentId?: number;
    processInstanceId?: string;
    replyContext?: string;
    replyName?: string;
  };
  /** CompleteTaskDto */
  CompleteTaskDto: {
    /**
     * Format: int32
     * @description 审批类型 1 审批 ，2 驳回 ，3 提交 ，4 重新提交 ，5 审批结束 ，6 流程终止
     */
    approveType: number;
    /** @description 审批文件 */
    fileActualIds?: string[];
    /** @description 流程对象 */
    flowObject: definitions["FlowObject"];
    /** @description 审批意见 */
    message: string;
    processDescription?: string;
    /** @description 任务id */
    taskId: string;
    /** @description 流程审批人 */
    userId: { [key: string]: { [key: string]: unknown }[] };
  };
  /** CopyByMeVo */
  CopyByMeVo: {
    activities?: string;
    /** @description 当前审批节点 */
    activitiys?: { [key: string]: unknown }[];
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 当前审批人名称 */
    assigneeName?: string;
    /** @description 当前审批人,分割 */
    assignees?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /** @description 抄送说明 */
    copyDescription?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    endTime?: string;
    /** @description 表单名称 */
    formName?: string;
    /** @description 流程定义id */
    processDefinitinoId?: string;
    /** @description 流程实例id */
    processInstanceId?: string;
    /**
     * Format: int32
     * @description 流程实例状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 流程实例创建时间
     */
    startTime?: string;
    /** @description 流程发起人 */
    startUserName?: string;
    /** @description 任务id */
    taskId?: { [key: string]: unknown }[];
    taskIds?: string;
    /**
     * Format: date-time
     * @description 流程实例更新时间
     */
    updateTime?: string;
    /** @description 流程发起人 */
    userId?: string;
  };
  /** CopyByMeVoFilter */
  CopyByMeVoFilter: {
    /** @description 应用id */
    appIds?: number[];
    /**
     * Format: int64
     * @description 流程类型id
     */
    categoryId?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    endTime?: string;
    /** @description 查询关键字，对应流程启动时候设定的名称 项目名称 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 流程状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    startTime?: string;
    /**
     * Format: int64
     * @description 流程发起人
     */
    startUserId?: number;
  };
  /** DataListVo */
  DataListVo: {
    /** @description 文件的实际id，根据此id和版本定位最新文件 */
    actualId?: string;
    /** @description 文件地址，根据业务实际情况指定 */
    address?: string;
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 业务表实际id */
    businessId?: string;
    /** @description 业务key，由业务端拼接而成，如果不为空的话businessId一定也不饿能为空 */
    businessKey?: string;
    /** @description 上传人 */
    createBy?: string;
    /** @description 上传人 */
    createByName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /**
     * Format: int32
     * @description 0:未删除，1:已删除
     */
    deleted?: number;
    /** @description 文件大小 */
    fileSize?: string;
    /** @description 文件全称，包含后缀 */
    fullName?: string;
    /** Format: int32 */
    hyperlink?: number;
    /**
     * Format: int64
     * @description 主键
     */
    id?: number;
    /** @description 关联的模块code */
    moduleCode?: string;
    /**
     * Format: int64
     * @description 关联的模块id
     */
    moduleId?: number;
    /** @description 关联的模块名称 */
    moduleName?: string;
    /** @description 文件名称（不包含后缀） */
    name?: string;
    /**
     * Format: int64
     * @description 持续时间，如果为音视频文件不为空
     */
    runtime?: number;
    /**
     * Format: int64
     * @description 文件大小
     */
    size?: number;
    /** @description 文件后缀 */
    suffix?: string;
    /**
     * Format: int64
     * @description 文件类型，关联f_type-id
     */
    type?: number;
    /** @description 文件类型code */
    typeCode?: string;
    /** @description 关联的文件类型名称 */
    typeName?: string;
    /**
     * Format: int64
     * @description 版本号，默认为1，如果有更新则累加
     */
    version?: number;
  };
  /** FlowCategoryDto */
  FlowCategoryDto: {
    /** @description 应用id */
    appId?: string;
    /**
     * Format: int64
     * @description 主键，编辑时不能为空
     */
    id?: number;
    /** @description 类型名称，必传不能为空 */
    name?: string;
    /**
     * Format: int64
     * @description 状态: 1启用 2禁用
     */
    status?: number;
  };
  /** FlowCategoryFilter */
  FlowCategoryFilter: {
    /** @description 应用id */
    appIds?: number[];
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
  };
  /** FlowCategoryListVo */
  FlowCategoryListVo: {
    /**
     * Format: int64
     * @description 创建人
     */
    createBy?: number;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /** Format: int64 */
    id?: number;
    /** @description 类型名称 */
    name?: string;
    /**
     * Format: int64
     * @description 状态 1 启用 2 禁用
     */
    status?: number;
    /**
     * Format: int64
     * @description 更新人
     */
    updateBy?: number;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** FlowCategoryVo */
  FlowCategoryVo: {
    /** @description 应用id */
    appId?: string;
    /**
     * Format: int64
     * @description 主键，编辑时不能为空
     */
    id?: number;
    /** @description 类型名称，必传不能为空 */
    name?: string;
    /**
     * Format: int64
     * @description 状态: 1启用 2禁用
     */
    status?: number;
  };
  /** FlowCommentInfoListVo */
  FlowCommentInfoListVo: {
    /** @description 节点id */
    activityId?: string;
    /** @description 节点名称 */
    activityName?: string;
    /**
     * Format: date-time
     * @description 审批时间
     */
    approveTime?: string;
    /** @description 节点审批人 */
    assignees?: string;
    /** @description 节点审批人名称 */
    assigneesNames?: string;
    /** @description 表决结果文字说明 */
    busiVoteMsg?: string;
    /**
     * Format: int32
     * @description 表决结果
     */
    busiVoteResult?: number;
    /** @description 审批附件 */
    files?: definitions["DataListVo"][];
    /**
     * Format: int32
     * @description 是否会签节点 1.是
     */
    flowElementMultiInstance?: number;
    /**
     * Format: int32
     * @description 是否隐藏审批意见 1.隐藏
     */
    hideApproveMessage?: number;
    /** @description id */
    id?: string;
    /** @description 审批意见 */
    message?: string;
    /** @description 下一节点id */
    nextActivityId?: string;
    /** @description 下一节点名称 */
    nextActivityName?: string;
    /** @description 下一节点审批人 */
    nextAssignees?: string;
    /** @description 下一节点审批人名称 */
    nextAssigneesNames?: string;
    /** @description 下一节点任务id */
    nextTaskId?: string;
    /** @description 流程实例id */
    processInstanceId?: string;
    /** @description 节点任务id */
    taskId?: string;
    /** @description taskInfos */
    taskInfo?: string;
    /** @description taskInfos */
    taskInfos?: definitions["Map«string,object»"][];
    /**
     * Format: int32
     * @description 审批类型
     */
    type?: number;
    /**
     * Format: int64
     * @description userId
     */
    userId?: number;
    /** @description 用户名 */
    userName?: string;
  };
  /** FlowExtendBusiData */
  FlowExtendBusiData: {
    /** Format: int64 */
    createBy?: number;
    /** Format: date-time */
    createTime?: string;
    /** Format: int32 */
    deleted?: number;
    fileActualIds?: string;
    formJson?: string;
    /** Format: int64 */
    id?: number;
    originalFileActualIds?: string;
    originalFormJson?: string;
    proInsId?: string;
    source?: string;
    taskId?: string;
    /** Format: int64 */
    updateBy?: number;
    /** Format: date-time */
    updateTime?: string;
  };
  /** FlowExtendProcInstCopyUser */
  FlowExtendProcInstCopyUser: {
    copyDescription?: string;
    /** Format: int64 */
    copyUserId?: number;
    copyUserName?: string;
    /** Format: int64 */
    id?: number;
    processInstanceExtentdId?: string;
    type?: string;
  };
  /** FlowExtendProcInstFilter */
  FlowExtendProcInstFilter: {
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
  };
  /** FlowExtendProcInstListVo */
  FlowExtendProcInstListVo: {
    /** @description 业务key */
    businessKey?: string;
    /**
     * Format: int64
     * @description 创建人
     */
    createBy?: number;
    /** @description 创建人 */
    createName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    id?: string;
    /** @description 模型key */
    modelKey?: string;
    /** @description 流程定义id */
    processDefinitionId?: string;
    /** @description 流程实例id */
    processInstanceId?: string;
    /** @description 流程表单名称 */
    processName?: string;
    /** @description 流程审批的文字说明 审批中，驳回，撤回，办结，终止 */
    processStatus?: string;
    /** @description 租户id */
    tenantId?: string;
    /**
     * Format: int64
     * @description 更新人
     */
    updateBy?: number;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** FlowModelDeployDto */
  FlowModelDeployDto: {
    /** @description 应用id */
    appId?: string;
    /** @description 模型分类 */
    category?: string;
    /** @description 模型id */
    modelId?: string;
  };
  /** FlowModelInfoDto */
  FlowModelInfoDto: {
    /** @description 应用id */
    appId?: string;
    /**
     * Format: int64
     * @description 流程类型
     */
    categoryId: number;
    /** @description id主键，编辑时不能为空 */
    id?: string;
    /** @description 模型id，非必传 */
    modelId?: string;
    /** @description 模型key，必传 */
    modelKey: string;
    /** @description 流程定义的xml */
    modelXml: string;
    /** @description 模型名称，必传 */
    name: string;
    /** @description 备注 */
    remark?: string;
    /** @description 自定义规则 */
    ruleJson: string;
  };
  /** FlowModelInfoFilter */
  FlowModelInfoFilter: {
    /** @description 应用id */
    appId?: string;
    /**
     * Format: int64
     * @description 分类id
     */
    categoryId?: number;
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
    /**
     * Format: int32
     * @description 模型状态
     */
    status?: number;
  };
  /** FlowModelInfoListVo */
  FlowModelInfoListVo: {
    /**
     * Format: int64
     * @description 流程类型id
     */
    categoryId?: number;
    /** @description 流程类型名称 */
    categoryName?: string;
    /**
     * Format: int64
     * @description 创建人
     */
    createBy?: number;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /** @description id */
    id?: string;
    /** @description 模型id */
    modelId?: string;
    /** @description 模型key */
    modelKey?: string;
    /** @description 名称 */
    name?: string;
    /**
     * Format: int32
     * @description 模型状态 1->待发布 2->已发布 3->停用 4->删除
     */
    status?: number;
    /**
     * Format: int64
     * @description 更新人
     */
    updateBy?: number;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** FlowModelInfoLoadVo */
  FlowModelInfoLoadVo: {
    /**
     * Format: int64
     * @description 创建人
     */
    createBy?: number;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /** @description id */
    id?: string;
    /** @description 模型id */
    modelId?: string;
    /** @description 模型key */
    modelKey?: string;
    /** @description 名称 */
    name?: string;
    /**
     * Format: int32
     * @description 模型状态 1->草稿 2->待发布 3->已发布 4->停用 5->删除
     */
    status?: number;
    /**
     * Format: int64
     * @description 更新人
     */
    updateBy?: number;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** FlowModelInfoVo */
  FlowModelInfoVo: {
    /**
     * Format: int64
     * @description 流程类型id
     */
    categoryId?: number;
    /** @description 流程类型名称 */
    categoryName?: string;
    /** @description id主键 */
    id?: string;
    /** @description 模型id */
    modelId?: string;
    /** @description 模型key */
    modelKey?: string;
    /** @description 流程定义的xml */
    modelXml?: string;
    /** @description 模型名称 */
    name?: string;
    /** @description 备注 */
    remark?: string;
    /** @description 自定义规则 */
    ruleJson?: string;
  };
  /** FlowObject */
  FlowObject: {
    formData?: { [key: string]: unknown };
    formDataUrl?: string;
  };
  /** HighLightedNodeVo */
  HighLightedNodeVo: {
    activeActivityIds?: string[];
    highLightedFlows?: string[];
    modelName?: string;
    modelXml?: string;
  };
  /** Map«string,object» */
  "Map«string,object»": { [key: string]: { [key: string]: unknown } };
  /** Model */
  Model: {
    comment?: string;
    /** Format: date-time */
    created?: string;
    createdBy?: string;
    description?: string;
    id?: string;
    key?: string;
    /** Format: date-time */
    lastUpdated?: string;
    lastUpdatedBy?: string;
    modelEditorJson?: string;
    /** Format: int32 */
    modelType?: number;
    name?: string;
    tenantId?: string;
    /** Format: byte */
    thumbnail?: string;
    /** Format: int32 */
    version?: number;
  };
  /** PagerQueryBodyModel */
  PagerQueryBodyModel: {
    dir?: string;
    /** Format: int32 */
    limit?: number;
    /** Format: int32 */
    page?: number;
    sort?: string;
  };
  /** PagerQueryBody«ActTaskFilter» */
  "PagerQueryBody«ActTaskFilter»": {
    filter?: definitions["ActTaskFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«CopyByMeVoFilter» */
  "PagerQueryBody«CopyByMeVoFilter»": {
    filter?: definitions["CopyByMeVoFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«FlowCategoryFilter» */
  "PagerQueryBody«FlowCategoryFilter»": {
    filter?: definitions["FlowCategoryFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«FlowExtendProcInstFilter» */
  "PagerQueryBody«FlowExtendProcInstFilter»": {
    filter?: definitions["FlowExtendProcInstFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«FlowModelInfoFilter» */
  "PagerQueryBody«FlowModelInfoFilter»": {
    filter?: definitions["FlowModelInfoFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«ShareMeVoFilter» */
  "PagerQueryBody«ShareMeVoFilter»": {
    filter?: definitions["ShareMeVoFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«StartByMeFilter» */
  "PagerQueryBody«StartByMeFilter»": {
    filter?: definitions["StartByMeFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** Pager«ActHiTaskListVo» */
  "Pager«ActHiTaskListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["ActHiTaskListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«ActRuTaskListVo» */
  "Pager«ActRuTaskListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["ActRuTaskListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«CopyByMeVo» */
  "Pager«CopyByMeVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["CopyByMeVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«FlowCategoryListVo» */
  "Pager«FlowCategoryListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["FlowCategoryListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«FlowExtendProcInstListVo» */
  "Pager«FlowExtendProcInstListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["FlowExtendProcInstListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«FlowModelInfoListVo» */
  "Pager«FlowModelInfoListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["FlowModelInfoListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«ShareMeVo» */
  "Pager«ShareMeVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["ShareMeVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«StartByMeVo» */
  "Pager«StartByMeVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["StartByMeVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** ProcessInstanceInfo */
  ProcessInstanceInfo: {
    /** @description businessKey */
    businessKey?: string;
    /** @description formJson */
    formJson?: definitions["FlowExtendBusiData"][];
    /** @description 抄送信息 */
    postCc?: definitions["FlowExtendProcInstCopyUser"][];
    /** @description 抄送信息 */
    preCc?: definitions["FlowExtendProcInstCopyUser"][];
    /** @description 流程描述/流程说明 */
    processDescription?: string;
    /** @description 流程实例id */
    processInstaceId?: string;
    /** @description 流程实例名称 */
    processInstanceName?: string;
    /**
     * Format: int32
     * @description 流程状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 流程启动时间
     */
    startTime?: string;
    /** @description 流程启动人 */
    startUserId?: string;
    /** @description 流程启动人名称 */
    startUserName?: string;
  };
  /** ProcessInstanceInfoDto */
  ProcessInstanceInfoDto: {
    /** @description 流程实例id */
    processInstanceId: string;
  };
  /** QueryRuleDto */
  QueryRuleDto: {
    /** @description processInstanceId */
    appId?: string;
    /** @description 流程变量,表单数据,预测路径 */
    formData?: { [key: string]: unknown };
    /** @description 流程定义key,流程启动前校验 */
    processDefKey?: string;
    /** @description processInstanceId */
    processInstanceId?: string;
    /** @description taskId 任务Id,流程启动后审批前校验,已审核查看时使用 */
    taskId?: string;
  };
  /** ResultEntity«FlowCategoryVo» */
  "ResultEntity«FlowCategoryVo»": {
    code?: string;
    data?: definitions["FlowCategoryVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«FlowModelInfoLoadVo» */
  "ResultEntity«FlowModelInfoLoadVo»": {
    code?: string;
    data?: definitions["FlowModelInfoLoadVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«FlowModelInfoVo» */
  "ResultEntity«FlowModelInfoVo»": {
    code?: string;
    data?: definitions["FlowModelInfoVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«HighLightedNodeVo» */
  "ResultEntity«HighLightedNodeVo»": {
    code?: string;
    data?: definitions["HighLightedNodeVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«ActHiTaskListVo»» */
  "ResultEntity«List«ActHiTaskListVo»»": {
    code?: string;
    data?: definitions["ActHiTaskListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«ActRuTaskListVo»» */
  "ResultEntity«List«ActRuTaskListVo»»": {
    code?: string;
    data?: definitions["ActRuTaskListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«CommentInfosVo»» */
  "ResultEntity«List«CommentInfosVo»»": {
    code?: string;
    data?: definitions["CommentInfosVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«CommentVo»» */
  "ResultEntity«List«CommentVo»»": {
    code?: string;
    data?: definitions["CommentVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«FlowCategoryListVo»» */
  "ResultEntity«List«FlowCategoryListVo»»": {
    code?: string;
    data?: definitions["FlowCategoryListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«FlowCommentInfoListVo»» */
  "ResultEntity«List«FlowCommentInfoListVo»»": {
    code?: string;
    data?: definitions["FlowCommentInfoListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«FlowExtendBusiData»» */
  "ResultEntity«List«FlowExtendBusiData»»": {
    code?: string;
    data?: definitions["FlowExtendBusiData"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«FlowExtendProcInstCopyUser»» */
  "ResultEntity«List«FlowExtendProcInstCopyUser»»": {
    code?: string;
    data?: definitions["FlowExtendProcInstCopyUser"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«Map«string,object»»» */
  "ResultEntity«List«Map«string,object»»»": {
    code?: string;
    data?: definitions["Map«string,object»"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«string»» */
  "ResultEntity«List«string»»": {
    code?: string;
    data?: string[];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Model» */
  "ResultEntity«Model»": {
    code?: string;
    data?: definitions["Model"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«ActHiTaskListVo»» */
  "ResultEntity«Pager«ActHiTaskListVo»»": {
    code?: string;
    data?: definitions["Pager«ActHiTaskListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«ActRuTaskListVo»» */
  "ResultEntity«Pager«ActRuTaskListVo»»": {
    code?: string;
    data?: definitions["Pager«ActRuTaskListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«CopyByMeVo»» */
  "ResultEntity«Pager«CopyByMeVo»»": {
    code?: string;
    data?: definitions["Pager«CopyByMeVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«FlowCategoryListVo»» */
  "ResultEntity«Pager«FlowCategoryListVo»»": {
    code?: string;
    data?: definitions["Pager«FlowCategoryListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«FlowExtendProcInstListVo»» */
  "ResultEntity«Pager«FlowExtendProcInstListVo»»": {
    code?: string;
    data?: definitions["Pager«FlowExtendProcInstListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«FlowModelInfoListVo»» */
  "ResultEntity«Pager«FlowModelInfoListVo»»": {
    code?: string;
    data?: definitions["Pager«FlowModelInfoListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«ShareMeVo»» */
  "ResultEntity«Pager«ShareMeVo»»": {
    code?: string;
    data?: definitions["Pager«ShareMeVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«StartByMeVo»» */
  "ResultEntity«Pager«StartByMeVo»»": {
    code?: string;
    data?: definitions["Pager«StartByMeVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«ProcessInstanceInfo» */
  "ResultEntity«ProcessInstanceInfo»": {
    code?: string;
    data?: definitions["ProcessInstanceInfo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«RuleVo» */
  "ResultEntity«RuleVo»": {
    code?: string;
    data?: definitions["RuleVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«object» */
  "ResultEntity«object»": {
    code?: string;
    data?: { [key: string]: unknown };
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«string» */
  "ResultEntity«string»": {
    code?: string;
    data?: string;
    msg?: string;
    success?: boolean;
  };
  /** RuleVo */
  RuleVo: {
    currentNode?: { [key: string]: unknown };
    nextNode?: { [key: string]: unknown };
    previousNode?: { [key: string]: unknown };
    processCopyconfig?: { [key: string]: unknown };
  };
  /** ShareMeVo */
  ShareMeVo: {
    activities?: string;
    /** @description 当前审批节点 */
    activitiys?: { [key: string]: unknown }[];
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 当前审批人名称 */
    assigneeName?: string;
    /** @description 当前审批人,分割 */
    assignees?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /** @description 抄送说明 */
    copyDescription?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    endTime?: string;
    /** @description 表单名称 */
    formName?: string;
    /** @description 流程定义id */
    processDefinitinoId?: string;
    /** @description 流程实例id */
    processInstanceId?: string;
    /**
     * Format: int32
     * @description 流程实例状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 流程实例创建时间
     */
    startTime?: string;
    /** @description 流程发起人 */
    startUserName?: string;
    /** @description 任务id */
    taskId?: { [key: string]: unknown }[];
    taskIds?: string;
    /**
     * Format: date-time
     * @description 流程实例更新时间
     */
    updateTime?: string;
    /** @description 流程发起人 */
    userId?: string;
  };
  /** ShareMeVoFilter */
  ShareMeVoFilter: {
    /** @description 应用id */
    appIds?: number[];
    /**
     * Format: int64
     * @description 流程类型id
     */
    categoryId?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    endTime?: string;
    /** @description 查询关键字，对应流程启动时候设定的名称 项目名称 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 流程状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    startTime?: string;
    /**
     * Format: int64
     * @description 流程发起人
     */
    startUserId?: number;
  };
  /** StartByMeFilter */
  StartByMeFilter: {
    /** @description 应用id */
    appIds?: number[];
    /**
     * Format: int64
     * @description 流程类型Id
     */
    categoryId?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    endTime?: string;
    /** @description 查询关键字，对应流程启动时候设定的名称 项目名称 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 流程状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 发起时间
     */
    startTime?: string;
  };
  /** StartByMeVo */
  StartByMeVo: {
    activities?: string;
    /** @description 当前审批节点 */
    activitiys?: { [key: string]: unknown }[];
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 当前审批人名称 */
    assigneeName?: string;
    /** @description 当前审批人,分割 */
    assignees?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    endTime?: string;
    /** @description 表单名称 */
    fromName?: string;
    /** @description 流程定义id */
    processDefinitinoId?: string;
    /** @description 流程实例id */
    processInstanceId?: string;
    /**
     * Format: int32
     * @description 流程实例状态
     */
    processStatus?: number;
    /**
     * Format: date-time
     * @description 流程实例创建时间
     */
    startTime?: string;
    /** @description 任务id */
    taskId?: { [key: string]: unknown }[];
    taskIds?: string;
    /**
     * Format: date-time
     * @description 流程实例更新时间
     */
    updateTime?: string;
  };
  /** StartProcessInstanceDto */
  StartProcessInstanceDto: {
    /** @description 租户id */
    appId: string;
    /**
     * Format: int32
     * @description 审批类型 1 审批 ，2 驳回 ，3 提交 ，4 重新提交 ，5 审批结束 ，6 流程终止
     */
    approveType: number;
    /** @description 抄送说明 */
    copyDescription?: string;
    /** @description 抄送用户id */
    copyUserId?: number[];
    /** @description 审批文件 */
    fileActualIds?: string[];
    /** @description 流程对象 */
    flowObject: definitions["FlowObject"];
    /** @description 审批意见 */
    message: string;
    /** @description 流程定义key */
    processDefKey: string;
    processDescription?: string;
    /** @description 流程启动人 */
    startUserId?: string;
    /** @description 流程审批人 */
    userId: { [key: string]: { [key: string]: unknown }[] };
  };
  /** StopProcessInstanceDto */
  StopProcessInstanceDto: {
    /** @description 流程终止原因，选填 */
    message: string;
    /** @description 流程实例Id */
    processInstanceId?: string;
    /** @description 任务id */
    taskId?: string;
  };
  /** ToUserDto */
  ToUserDto: {
    /** @description 审批文件 */
    fileActualIds?: string[];
    /** @description 审批意见 */
    message: string;
    /** @description 任务id */
    taskId: string;
    /** @description 转办人 */
    userId: string;
  };
}

export interface operations {
  /** 加签 */
  addMultiInstanceUsingPOST: {
    parameters: {
      body: {
        /** addMultiInstanceDto */
        addMultiInstanceDto: definitions["AddMultiInstanceDto"];
      };
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 回退到上一节点 */
  backTaskUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** backTaskDto */
        backTaskDto: definitions["BackTaskDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 撤回到发起人 */
  backTaskToStartUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** processInstanceInfoDto */
        processInstanceInfoDto: definitions["ProcessInstanceInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 合并流程审批记录 */
  combineCommentInfosByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«CommentInfosVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 审批 */
  completeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** completeTask */
        completeTask: definitions["CompleteTaskDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询抄送我的 */
  copyByMeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«CopyByMeVoFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«CopyByMeVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 减签 */
  deleteMultiInstanceUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** taskId */
        taskId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取当前流程活动节点 */
  getActiveActivityIdsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«string»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询我的待办任务列表 */
  getAppingTasksUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«ActTaskFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«ActRuTaskListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询我的已办任务 */
  getApplyedTasksUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«ActTaskFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«ActHiTaskListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询当前流程的审批记录 */
  getCommentInfosByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** queryCommentInfoDto */
        queryCommentInfoDto: definitions["ProcessInstanceInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«FlowCommentInfoListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询流程实例抄送信息 */
  getCopyInfoByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** processInstanceInfoDto */
        processInstanceInfoDto: definitions["ProcessInstanceInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«FlowExtendProcInstCopyUser»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过流程实例id获取当前用户任务taskId */
  getCurUserTasksListByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取当前流程高亮线和节点 */
  getHighLightedNodeByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** processInstanceInfoDto */
        processInstanceInfoDto: definitions["ProcessInstanceInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«HighLightedNodeVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询多任务节点历史已办理人信息 */
  getHistoryTaskUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«Map«string,object»»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过流程实例id获取流程信息 */
  getProcessInfoByBusinessKeyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** processInstanceInfoDto */
        processInstanceInfoDto: definitions["ProcessInstanceInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«ProcessInstanceInfo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取流程实例id */
  getProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** businessKey */
        businessKey: string;
        /** modelKey */
        modelKey: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取流程列表 */
  getProcessInstanceListUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«FlowExtendProcInstFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«FlowExtendProcInstListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过taskId判断任务是否存在 */
  getTasksByTaskIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** taskId */
        taskId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过流程实例id获取当前流程所有任务 */
  getTasksListByProcessInstanceIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«ActRuTaskListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过流程id查询当前节点所有任务 */
  getTasksListByProcessInstanceIdAndActivityIdUsingPOST: {
    parameters: {
      path: {
        /** activityId */
        activityId: string;
        /** processInstanceId */
        processInstanceId: string;
      };
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«ActHiTaskListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询选人规则 */
  approveAfterQueryRuleUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** params */
        params: definitions["QueryRuleDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«RuleVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询我发起的 */
  startByMeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«StartByMeFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«StartByMeVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 启动流程 */
  startProcessInstanceByKeyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** params */
        params: definitions["StartProcessInstanceDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 终止流程 */
  stopProcessUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** stopProcessInstanceDto */
        stopProcessInstanceDto: definitions["StopProcessInstanceDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 任务转办 */
  taskToUserUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** toUserDto */
        toUserDto: definitions["ToUserDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingGET: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPUT: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingDELETE: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingOPTIONS: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingHEAD: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingPATCH: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 流程部署 */
  deployBpmnUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** modelDeploy */
        modelDeploy: definitions["FlowModelDeployDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据id查询模型数据xml */
  getBpmnByModelIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** modelId */
        modelId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«FlowModelInfoVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新模型设计完流程图后更新 */
  saveBpmnModelUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** flowModelInfoDto */
        flowModelInfoDto: definitions["FlowModelInfoDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Model»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 业务表单数据 */
  busiDataUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«FlowExtendBusiData»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新增流程分类 */
  addUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** FlowCategoryDto对象 */
        flowCategoryDto: definitions["FlowCategoryDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据id删除数据 */
  deleteUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询流程类型数据列表(不分页) */
  listUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 过滤条件body */
        filter?: definitions["FlowCategoryFilter"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«FlowCategoryListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询流程类型数据列表(分页) */
  listPagerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body: definitions["PagerQueryBody«FlowCategoryFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«FlowCategoryListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据id查询单条数据 */
  loadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«FlowCategoryVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新数据 */
  updateUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** FlowCategoryDto对象 */
        flowCategoryDto: definitions["FlowCategoryDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 增加流程评论 */
  addCommentUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** commentDto */
        commentDto: definitions["CommentDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«CommentVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 父级审批，级联删除 */
  deleteUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查看评论 */
  commentsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«CommentVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询模型列表(分页) */
  listPagerUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«FlowModelInfoFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«FlowModelInfoListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据id查询单条模型数据 */
  loadUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«FlowModelInfoLoadVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  hhhUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** name */
        name: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询转阅/分享我的 */
  shareMeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«ShareMeVoFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«ShareMeVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 流程分享/转阅他人 */
  processToUserUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** processInstanceId */
        processInstanceId: string;
        /** userId */
        userId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  testRestTemplateUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
