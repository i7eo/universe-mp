/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/file/batchCopyFile": {
    /** 拷贝文件同模块同类型 */
    post: operations["batchCopyFileUsingPOST"];
  };
  "/api/file/batchCopyFileToOtherModule": {
    /** 批量拷贝文件到指定模块指定类型 */
    post: operations["batchCopyFileToOtherModuleUsingPOST"];
  };
  "/api/file/copyFile": {
    /** 拷贝文件到单个指定模块 */
    post: operations["copyFileUsingPOST"];
  };
  "/api/file/deleteFile/{actualId}": {
    /** 删除文件 */
    post: operations["deleteFileUsingPOST"];
  };
  "/api/file/deleteFileById/{id}": {
    /** 删除文件 */
    post: operations["deleteFileByIdUsingPOST"];
  };
  "/api/file/deleteFileByIds": {
    /** 删除文件 */
    post: operations["deleteFileByIdsUsingPOST"];
  };
  "/api/file/deleteFiles": {
    /** 批量删除文件 */
    post: operations["deleteFileUsingPOST_1"];
  };
  "/api/file/downloadToWatermark/{id}": {
    /** 文件下载带水印 */
    post: operations["downloadToWatermarkUsingPOST"];
  };
  "/api/file/fileDownload/{id}": {
    /** 文件下载 */
    post: operations["fileDownloadUsingPOST"];
  };
  "/api/file/fileMultiDownload": {
    /** 批量文件下载 */
    post: operations["fileMultiDownloadUsingPOST"];
  };
  "/api/file/fileMultiDownloadBySearch": {
    /** 批量文件下载按查询条件 */
    post: operations["fileMultiDownloadBySearchUsingPOST"];
  };
  "/api/file/online/{id}": {
    /** 在线预览文件 */
    post: operations["onlineUsingPOST"];
  };
  "/api/file/queryFile": {
    /** 查询文件(分页) */
    post: operations["queryFileUsingPOST"];
  };
  "/api/file/queryFileByBusinessIds": {
    /** 通过businessIds查询文件 */
    post: operations["queryFileByBusinessIdsUsingPOST"];
  };
  "/api/file/queryFileByExpands": {
    /** 通过扩展字段查询文件 */
    post: operations["queryFileByExpandsUsingPOST"];
  };
  "/api/file/queryFileByFileActualIds": {
    /** 通过fileActualIds查询文件 */
    post: operations["queryFileByFileActualIdsUsingPOST"];
  };
  "/api/file/queryFileByModuleCodeToRecursion": {
    /** 通过父级moduleCode递归查询文件(分页) */
    post: operations["queryFileByModuleCodeToRecursionUsingPOST"];
  };
  "/api/file/queryFileList": {
    /** 查询文件(不分页) */
    post: operations["queryFileListUsingPOST"];
  };
  "/api/file/queryHistoryFileByFileActualIds": {
    /** 通过fileActualIds查询文件包含历史版本 */
    post: operations["queryHistoryFileByFileActualIdsUsingPOST"];
  };
  "/api/file/richTextFileUpload": {
    /** 富文本文件上传 */
    post: operations["richTextFileUploadUsingPOST"];
  };
  "/api/file/templateGenerator": {
    post: operations["templateGeneratorUsingPOST"];
  };
  "/api/file/updateBack": {
    /** 更新回调 */
    post: operations["updateBackUsingPOST"];
  };
  "/api/file/updateBatchBack": {
    /** 批量更新回调 */
    post: operations["updateBatchBackUsingPOST"];
  };
  "/api/file/updateFile": {
    /** 更新文件(特定场景使用) */
    post: operations["updateFileUsingPOST"];
  };
  "/api/file/updateFileApproveStatus/": {
    /** 更新文件审批状态 */
    post: operations["updateFileApproveStatusUsingPOST"];
  };
  "/api/file/updateFileNameAndAddress": {
    /** 修改文件名称/超链接地址 */
    post: operations["updateFileNameAndAddressUsingPOST"];
  };
  "/api/file/updateFileType/{id}/{typeCode}": {
    /** 修改文件类型 */
    post: operations["updateFileTypeUsingPOST"];
  };
  "/api/file/upload": {
    /** 文件上传 */
    post: operations["uploadUsingPOST"];
  };
  "/api/file/uploadBack": {
    /** 上传回调 */
    post: operations["uploadBackUsingPOST"];
  };
  "/api/file/uploadHyperlink": {
    /** 超链接文件上传 */
    post: operations["uploadHyperlinkUsingPOST"];
  };
  "/api/historicaDataProcess/suppleRecord": {
    /** 流程历史文件补录 */
    post: operations["suppleRecordUsingPOST"];
  };
  "/error": {
    get: operations["handlerUsingGET"];
    put: operations["handlerUsingPUT"];
    post: operations["handlerUsingPOST"];
    delete: operations["handlerUsingDELETE"];
    options: operations["handlerUsingOPTIONS"];
    head: operations["handlerUsingHEAD"];
    patch: operations["handlerUsingPATCH"];
  };
  "/f/module/add": {
    post: operations["addUsingPOST"];
  };
  "/f/module/deleteBatch": {
    post: operations["deleteBatchUsingPOST"];
  };
  "/f/module/listPager": {
    post: operations["listPagerUsingPOST"];
  };
  "/f/module/load/{id}": {
    post: operations["loadUsingPOST"];
  };
  "/f/module/queryDirTree/{id}": {
    post: operations["queryDirTreeUsingPOST"];
  };
  "/f/module/queryModelTree": {
    post: operations["queryModelTreeUsingPOST"];
  };
  "/f/module/update": {
    post: operations["updateUsingPOST"];
  };
  "/f/type/add": {
    post: operations["addUsingPOST_1"];
  };
  "/f/type/deleteBatch": {
    post: operations["deleteBatchUsingPOST_1"];
  };
  "/f/type/list": {
    post: operations["listUsingPOST"];
  };
  "/f/type/listByCodeRange": {
    /** 通过code集合查询数据列表 */
    post: operations["listByCodeRangeUsingPOST"];
  };
  "/f/type/listPager": {
    post: operations["listPagerUsingPOST_1"];
  };
  "/f/type/load/{id}": {
    post: operations["loadUsingPOST_1"];
  };
  "/f/type/update": {
    post: operations["updateUsingPOST_1"];
  };
  "/hhh/{name}": {
    post: operations["hhhUsingPOST"];
  };
  "/hhh2": {
    post: operations["hhh2UsingPOST"];
  };
  "/sys/api/file/queryFileType": {
    /** 查询用户可查看文件类型信息 */
    post: operations["queryFileTypeUsingPOST"];
  };
  "/sys/api/file/queryFileTypeIdsByRoleId/{roleId}": {
    /** 通过角色id查询文件类型ids */
    post: operations["queryFileTypeIdsByRoleIdUsingPOST"];
  };
  "/sys/api/file/saveRoleFileTypes/{id}": {
    /** 保存角色文件类型 */
    post: operations["saveRoleFileTypesUsingPOST"];
  };
  "/thirdInterface/file/problemFeedbackAfterApproval": {
    post: operations["problemFeedbackAfterApprovalUsingPOST"];
  };
  "/thirdInterface/file/problemFeedbackInit": {
    post: operations["problemFeedbackInitUsingPOST"];
  };
}

export interface definitions {
  /** CopyFileDto */
  CopyFileDto: {
    /** @description 文件真实id */
    actualIds: string[];
    /** @description businessId */
    businessId?: string;
    /** @description businessKey */
    businessKey?: string;
    /** @description 操作人 */
    createBy?: string;
    /** @description 操作类型 */
    dataType?: string;
    /** @description 扩展字段 */
    expand?: string;
    /** @description 模块code */
    moduleCode: string;
    /** @description 类型code */
    typeCode: string;
  };
  /** DataFilter */
  DataFilter: {
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 业务businessId */
    businessId?: string;
    /** @description 业务businessKey */
    businessKey?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    endTime?: string;
    /**
     * Format: int64
     * @description 文件id
     */
    id?: number;
    /** @description 模块code */
    moduleCode?: string;
    /** @description 权限控制 0 默认不控制角色查询文件类型  1 控制角色查询文件类型 */
    permissionControl?: boolean;
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
    /**
     * Format: date-time
     * @description 开始时间
     */
    startTime?: string;
    /** @description 类型code */
    typeCode?: string;
  };
  /** DataListVo */
  DataListVo: {
    /** @description 文件的实际id，根据此id和版本定位最新文件，非必传 */
    actualId?: string;
    /** @description 文件地址，根据业务实际情况指定，必传不能为空 */
    address: string;
    /**
     * Format: int32
     * @description 应用id，非必传
     */
    appId?: number;
    /** @description 业务表实际id，非必传 */
    businessId?: string;
    /** @description 业务key，由业务端拼接而成，如果不为空的话businessId一定也不饿能为空，非必传 */
    businessKey?: string;
    createBy?: string;
    /** @description 上传人 */
    createByName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /**
     * Format: int32
     * @description 0:未删除，1:已删除，必传不能为空
     */
    deleted: number;
    /** @description 扩展字段 */
    expand?: string;
    /** @description 文件大小 */
    fileSize?: string;
    /** @description 文件全称，包含后缀，必传不能为空 */
    fullName: string;
    /** Format: int32 */
    hyperlink?: number;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /** @description 关联的模块code */
    moduleCode?: string;
    /**
     * Format: int64
     * @description 关联的模块id，必传不能为空
     */
    moduleId: number;
    /** @description 关联的模块名称 */
    moduleName?: string;
    /** @description 文件名称（不包含后缀），必传不能为空 */
    name: string;
    /**
     * Format: int64
     * @description 持续时间，如果为音视频文件不为空，非必传
     */
    runtime?: number;
    /**
     * Format: int64
     * @description 文件大小，必传不能为空
     */
    size: number;
    /**
     * Format: int32
     * @description 源文件下载标识 value = 1
     */
    sourceFileDownload?: number;
    /** @description 文件后缀，必传不能为空 */
    suffix: string;
    /**
     * Format: int64
     * @description 文件类型，关联f_type-id，必传不能为空
     */
    type: number;
    /** @description 文件类型code */
    typeCode?: string;
    /** @description 关联的文件类型名称 */
    typeName?: string;
    /**
     * Format: int64
     * @description 版本号，默认为1，如果有更新则累加，必传不能为空
     */
    version: number;
    /**
     * Format: int32
     * @description 水印文件下载标识 value = 2
     */
    watermarkFileDownload?: number;
  };
  /** DataVo */
  DataVo: {
    /** @description 文件的实际id，根据此id和版本定位最新文件，非必传 */
    actualId?: string;
    /** @description 文件地址，根据业务实际情况指定，必传不能为空 */
    address: string;
    /**
     * Format: int32
     * @description 应用id，非必传
     */
    appId?: number;
    /** @description 业务表实际id，非必传 */
    businessId?: string;
    /** @description 业务key，由业务端拼接而成，如果不为空的话businessId一定也不饿能为空，非必传 */
    businessKey?: string;
    createBy?: string;
    /** @description 上传人 */
    createByName?: string;
    /**
     * Format: date-time
     * @description 上传日期
     */
    createTime?: string;
    /**
     * Format: int32
     * @description 0:未删除，1:已删除，必传不能为空
     */
    deleted: number;
    /** @description 扩展字段 */
    expand?: string;
    /** @description 文件大小 */
    fileSize?: string;
    /** @description 文件全称，包含后缀，必传不能为空 */
    fullName: string;
    /** Format: int32 */
    hyperlink?: number;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /** @description 模块code */
    moduleCode?: string;
    /**
     * Format: int64
     * @description 关联的模块id，必传不能为空
     */
    moduleId: number;
    /** @description 文件名称（不包含后缀），必传不能为空 */
    name: string;
    /**
     * Format: int64
     * @description 持续时间，如果为音视频文件不为空，非必传
     */
    runtime?: number;
    /**
     * Format: int64
     * @description 文件大小，必传不能为空
     */
    size: number;
    /**
     * Format: int32
     * @description 源文件下载标识 value = 1
     */
    sourceFileDownload?: number;
    /** @description 文件后缀，必传不能为空 */
    suffix: string;
    /**
     * Format: int64
     * @description 文件类型，关联f_type-id，必传不能为空
     */
    type: number;
    /** @description 类型code */
    typeCode?: string;
    /** @description 关联的文件类型名称 */
    typeName?: string;
    /**
     * Format: int64
     * @description 版本号，默认为1，如果有更新则累加，必传不能为空
     */
    version: number;
    /**
     * Format: int32
     * @description 水印文件下载标识 value = 2
     */
    watermarkFileDownload?: number;
  };
  /** DownloadDto */
  DownloadDto: {
    /** @description 文件名 */
    fileName?: string;
    /** @description 下载文件的ids */
    ids: number[];
  };
  /** File */
  File: {
    absolute?: boolean;
    absoluteFile?: definitions["File"];
    absolutePath?: string;
    canonicalFile?: definitions["File"];
    canonicalPath?: string;
    directory?: boolean;
    executable?: boolean;
    file?: boolean;
    /** Format: int64 */
    freeSpace?: number;
    hidden?: boolean;
    /** Format: int64 */
    lastModified?: number;
    name?: string;
    parent?: string;
    parentFile?: definitions["File"];
    path?: string;
    readable?: boolean;
    /** Format: int64 */
    totalSpace?: number;
    /** Format: int64 */
    usableSpace?: number;
    writable?: boolean;
  };
  /** FileBackDto */
  FileBackDto: {
    /** @description bussinessId */
    bussinessId?: string;
    /** @description bussinessKey */
    bussinessKey?: string;
    /** @description 文件真实id */
    fileActualIds?: { [key: string]: unknown }[];
    /** @description moduleCode */
    moduleCode?: string;
  };
  /** FileBatchBackDto«FileBackDto» */
  "FileBatchBackDto«FileBackDto»": {
    batchBackObject?: definitions["FileBackDto"][];
  };
  /** FileDownloadFilter */
  FileDownloadFilter: {
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 业务businessId */
    businessId?: string;
    /** @description 业务businessKey */
    businessKey?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    endTime?: string;
    fileName?: string;
    /**
     * Format: int64
     * @description 文件id
     */
    id?: number;
    /** @description 模块code */
    moduleCode?: string;
    /** @description 权限控制 0 默认不控制角色查询文件类型  1 控制角色查询文件类型 */
    permissionControl?: boolean;
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
    /**
     * Format: date-time
     * @description 开始时间
     */
    startTime?: string;
    /** @description 类型code */
    typeCode?: string;
  };
  /** InputStream */
  InputStream: { [key: string]: unknown };
  /** ModuleDto */
  ModuleDto: {
    /** @description key，用于存储文件时，指定节点，必传不能为空 */
    code: string;
    /**
     * Format: int64
     * @description 限制文件大小，非必传
     */
    fileSize?: number;
    /** @description 限制文件类型，非必传 */
    fileType?: string;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /** @description 文件结构树的节点名称，必传不能为空 */
    name: string;
    /**
     * Format: int64
     * @description 父id
     */
    parentId: number;
    /** @description 备注，非必传 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号，必传不能为空
     */
    seq: number;
    /**
     * Format: int32
     * @description 类型：1目录、2文件节点，只有类型为2时才能挂文件，必传不能为空
     */
    type: number;
  };
  /** ModuleFilter */
  ModuleFilter: {
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
  };
  /** ModuleListVo */
  ModuleListVo: {
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    checked?: boolean;
    children?: { [key: string]: unknown }[];
    /** @description key，用于存储文件时，指定节点 */
    code?: string;
    expanded?: boolean;
    /**
     * Format: int64
     * @description 限制文件大小
     */
    fileSize?: number;
    /** @description 限制文件类型 */
    fileType?: string;
    id?: { [key: string]: unknown };
    leaf?: boolean;
    name?: string;
    parentId?: { [key: string]: unknown };
    /** @description 备注 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号
     */
    seq?: number;
    /**
     * Format: int32
     * @description 类型：1目录、2文件节点，只有类型为2时才能挂文件
     */
    type?: number;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** ModuleTreeVo */
  ModuleTreeVo: {
    checked?: boolean;
    children?: { [key: string]: unknown }[];
    code?: string;
    expanded?: boolean;
    id?: { [key: string]: unknown };
    leaf?: boolean;
    name?: string;
    parentId?: { [key: string]: unknown };
    /** Format: int32 */
    type?: number;
    typeList?: definitions["TypeListVo"][];
  };
  /** ModuleVo */
  ModuleVo: {
    /** @description key，用于存储文件时，指定节点，必传不能为空 */
    code: string;
    /**
     * Format: int64
     * @description 限制文件大小，非必传
     */
    fileSize?: number;
    /** @description 限制文件类型，非必传 */
    fileType?: string;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /** @description 文件结构树的节点名称，必传不能为空 */
    name: string;
    /**
     * Format: int64
     * @description 父id
     */
    parentId: number;
    /** @description 备注，非必传 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号，必传不能为空
     */
    seq: number;
    /**
     * Format: int32
     * @description 类型：1目录、2文件节点，只有类型为2时才能挂文件，必传不能为空
     */
    type: number;
  };
  /** PagerQueryBodyModel */
  PagerQueryBodyModel: {
    dir?: string;
    /** Format: int32 */
    limit?: number;
    /** Format: int32 */
    page?: number;
    sort?: string;
  };
  /** PagerQueryBody«DataFilter» */
  "PagerQueryBody«DataFilter»": {
    filter?: definitions["DataFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«ModuleFilter» */
  "PagerQueryBody«ModuleFilter»": {
    filter?: definitions["ModuleFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«TypeFilter» */
  "PagerQueryBody«TypeFilter»": {
    filter?: definitions["TypeFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** Pager«DataListVo» */
  "Pager«DataListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["DataListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«ModuleListVo» */
  "Pager«ModuleListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["ModuleListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«TypeListVo» */
  "Pager«TypeListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["TypeListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Resource */
  Resource: {
    description?: string;
    file?: definitions["File"];
    filename?: string;
    inputStream?: definitions["InputStream"];
    open?: boolean;
    readable?: boolean;
    uri?: definitions["URI"];
    url?: definitions["URL"];
  };
  /** ResultEntity«DataVo» */
  "ResultEntity«DataVo»": {
    code?: string;
    data?: definitions["DataVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«DataListVo»» */
  "ResultEntity«List«DataListVo»»": {
    code?: string;
    data?: definitions["DataListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«DataVo»» */
  "ResultEntity«List«DataVo»»": {
    code?: string;
    data?: definitions["DataVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«ModuleTreeVo»» */
  "ResultEntity«List«ModuleTreeVo»»": {
    code?: string;
    data?: definitions["ModuleTreeVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«TypeListVo»» */
  "ResultEntity«List«TypeListVo»»": {
    code?: string;
    data?: definitions["TypeListVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«string»» */
  "ResultEntity«List«string»»": {
    code?: string;
    data?: string[];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«ModuleVo» */
  "ResultEntity«ModuleVo»": {
    code?: string;
    data?: definitions["ModuleVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«DataListVo»» */
  "ResultEntity«Pager«DataListVo»»": {
    code?: string;
    data?: definitions["Pager«DataListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«ModuleListVo»» */
  "ResultEntity«Pager«ModuleListVo»»": {
    code?: string;
    data?: definitions["Pager«ModuleListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«TypeListVo»» */
  "ResultEntity«Pager«TypeListVo»»": {
    code?: string;
    data?: definitions["Pager«TypeListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«TypeVo» */
  "ResultEntity«TypeVo»": {
    code?: string;
    data?: definitions["TypeVo"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«object» */
  "ResultEntity«object»": {
    code?: string;
    data?: { [key: string]: unknown };
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«string» */
  "ResultEntity«string»": {
    code?: string;
    data?: string;
    msg?: string;
    success?: boolean;
  };
  /** RoleType */
  RoleType: {
    code?: string;
    /** @description 文件类型id */
    id: string;
    /**
     * Format: int32
     * @description 模块id
     */
    moduleId?: number;
    /** @description 角色id */
    roleId?: string;
    /** @description 源文件下载标识 1 */
    sourceFileDownload?: string;
    /** @description 水印文件下载标识 2 */
    watermarkFileDownload?: string;
  };
  /** TypeDto */
  TypeDto: {
    /** @description 文件类型编码，必传不能为空 */
    code: string;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /** @description 文件类型名称，必传不能为空 */
    name: string;
    /** @description 备注，非必传 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号，必传不能为空
     */
    seq: number;
  };
  /** TypeFilter */
  TypeFilter: {
    /** @description 聚合查询框, 非必填 */
    searchValue?: string;
  };
  /** TypeListVo */
  TypeListVo: {
    /**
     * Format: int32
     * @description 应用id
     */
    appId?: number;
    /** @description 文件类型编码 */
    code?: string;
    /**
     * Format: int64
     * @description 主键
     */
    id?: number;
    /**
     * Format: int32
     * @description 模块id
     */
    moduleId?: number;
    /** @description 文件类型名称 */
    name?: string;
    /** Format: int32 */
    parentId?: number;
    /** @description 备注 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号
     */
    seq?: number;
    /** @description 字符串拼接id */
    sid?: string;
  };
  /** TypeVo */
  TypeVo: {
    /** @description 文件类型编码，必传不能为空 */
    code: string;
    /**
     * Format: int64
     * @description 主键主键，编辑时不能为空
     */
    id?: number;
    /**
     * Format: int32
     * @description 模块id
     */
    moduleId?: number;
    /** @description 文件类型名称，必传不能为空 */
    name: string;
    /** Format: int32 */
    parentId?: number;
    /** @description 备注，非必传 */
    remark?: string;
    /**
     * Format: double
     * @description 排序号，必传不能为空
     */
    seq: number;
  };
  /** URI */
  URI: {
    absolute?: boolean;
    authority?: string;
    fragment?: string;
    host?: string;
    opaque?: boolean;
    path?: string;
    /** Format: int32 */
    port?: number;
    query?: string;
    rawAuthority?: string;
    rawFragment?: string;
    rawPath?: string;
    rawQuery?: string;
    rawSchemeSpecificPart?: string;
    rawUserInfo?: string;
    scheme?: string;
    schemeSpecificPart?: string;
    userInfo?: string;
  };
  /** URL */
  URL: {
    authority?: string;
    content?: { [key: string]: unknown };
    /** Format: int32 */
    defaultPort?: number;
    deserializedFields?: definitions["URLStreamHandler"];
    file?: string;
    host?: string;
    path?: string;
    /** Format: int32 */
    port?: number;
    protocol?: string;
    query?: string;
    ref?: string;
    /** Format: int32 */
    serializedHashCode?: number;
    userInfo?: string;
  };
  /** URLStreamHandler */
  URLStreamHandler: { [key: string]: unknown };
  /** UpdateFileDto */
  UpdateFileDto: {
    /** @description 文件真实id */
    actualIds: string[];
    /** @description businessId */
    businessId?: string;
    /** @description businessKey */
    businessKey?: string;
    /** @description 文件的审批状态 */
    businessStatus?: string;
    /** @description moduleCode */
    moduleCode?: string;
    /** Format: int64 */
    moduleId?: number;
    /** @description typeCode */
    typeCode?: string[];
    typeId?: number[];
  };
  /** UpdateFileNameAndAddressDto */
  UpdateFileNameAndAddressDto: {
    /** @description 文件地址，超链接文件时，可使用 */
    address?: string;
    /**
     * Format: int64
     * @description 文件id
     */
    id?: number;
    /** @description 修改的文件名称 */
    name?: string;
  };
  /** UploadHyperlinkDto */
  UploadHyperlinkDto: {
    /** @description 文件超链接地址 */
    address: string;
    businessId?: string;
    businessKey?: string;
    /** @description 模块code */
    moduleCode: string;
    /** @description 文件名称 */
    name: string;
    /** @description 类型code */
    typeCode: string;
  };
}

export interface operations {
  /** 拷贝文件同模块同类型 */
  batchCopyFileUsingPOST: {
    parameters: {
      body: {
        /** actualIds */
        actualIds: string[];
      };
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 批量拷贝文件到指定模块指定类型 */
  batchCopyFileToOtherModuleUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** copyFileList */
        copyFileList: definitions["CopyFileDto"][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 拷贝文件到单个指定模块 */
  copyFileUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** copyFileDto */
        copyFileDto: definitions["CopyFileDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 删除文件 */
  deleteFileUsingPOST: {
    parameters: {
      path: {
        /** actualId */
        actualId: string;
      };
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 删除文件 */
  deleteFileByIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 删除文件 */
  deleteFileByIdsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** ids */
        ids: number[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 批量删除文件 */
  deleteFileUsingPOST_1: {
    parameters: {
      body: {
        /** actualIds */
        actualIds: string[];
      };
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 文件下载带水印 */
  downloadToWatermarkUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 文件下载 */
  fileDownloadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 批量文件下载 */
  fileMultiDownloadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** downloadDto */
        downloadDto: definitions["DownloadDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 批量文件下载按查询条件 */
  fileMultiDownloadBySearchUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** fileDownloadFilter */
        fileDownloadFilter: definitions["FileDownloadFilter"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 在线预览文件 */
  onlineUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询文件(分页) */
  queryFileUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«DataFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过businessIds查询文件 */
  queryFileByBusinessIdsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** businessIds */
        businessIds?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过扩展字段查询文件 */
  queryFileByExpandsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** expands */
        expands?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过fileActualIds查询文件 */
  queryFileByFileActualIdsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** fileActualIds */
        fileActualIds?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过父级moduleCode递归查询文件(分页) */
  queryFileByModuleCodeToRecursionUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«DataFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询文件(不分页) */
  queryFileListUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 不分页过滤条件body */
        body?: definitions["DataFilter"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过fileActualIds查询文件包含历史版本 */
  queryHistoryFileByFileActualIdsUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** fileActualIds */
        fileActualIds?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 富文本文件上传 */
  richTextFileUploadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      formData: {
        /** files */
        files: unknown[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  templateGeneratorUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** data */
        data: { [key: string]: unknown };
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新回调 */
  updateBackUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** uploadBackDto */
        uploadBackDto: definitions["FileBackDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 批量更新回调 */
  updateBatchBackUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** fileBatchBackDto */
        fileBatchBackDto: definitions["FileBatchBackDto«FileBackDto»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新文件(特定场景使用) */
  updateFileUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      query: {
        /** 文件真实id */
        fileActualIds?: string;
        /** 即时更新 */
        instantUpdate?: boolean;
      };
      formData: {
        /** files */
        files: unknown[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新文件审批状态 */
  updateFileApproveStatusUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** updateFileDto */
        updateFileDto: definitions["UpdateFileDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 修改文件名称/超链接地址 */
  updateFileNameAndAddressUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 更新文件dto */
        updateFileNameAndAddressDto?: definitions["UpdateFileNameAndAddressDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 修改文件类型 */
  updateFileTypeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 文件id */
        id?: string;
        /** 文件类型 */
        typeCode?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 文件上传 */
  uploadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      formData: {
        /** businessId */
        businessId?: unknown;
        /** businessKey */
        businessKey?: unknown;
        /** files */
        files: unknown[];
        /** moduleCode */
        moduleCode: unknown;
        /** typeCode */
        typeCode: unknown;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«DataVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 上传回调 */
  uploadBackUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** uploadBackDto */
        uploadBackDto: definitions["FileBackDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 超链接文件上传 */
  uploadHyperlinkUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** uploadHyperlinkDto */
        uploadHyperlinkDto: definitions["UploadHyperlinkDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«DataVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 流程历史文件补录 */
  suppleRecordUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingGET: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPUT: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingDELETE: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingOPTIONS: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingHEAD: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingPATCH: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  addUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** FmoduleDto对象 */
        moduleDto: definitions["ModuleDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteBatchUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** id数组 */
        ids: number[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listPagerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«ModuleFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«ModuleListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  loadUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«ModuleVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryDirTreeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 指定目录id */
        id?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  queryModelTreeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«ModuleTreeVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** FmoduleDto对象 */
        fmoduleDto: definitions["ModuleDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  addUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** typeDto对象 */
        typeDto: definitions["TypeDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteBatchUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** id数组 */
        ids: number[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 过滤条件body */
        body?: definitions["TypeFilter"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«TypeListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过code集合查询数据列表 */
  listByCodeRangeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** codes集合 */
        codes?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«TypeListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listPagerUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** 分页过滤条件body */
        body?: definitions["PagerQueryBody«TypeFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«TypeListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  loadUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** id */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«TypeVo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  updateUsingPOST_1: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** typeDto对象 */
        typeDto: definitions["TypeDto"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  hhhUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** name */
        name: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  hhh2UsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** map */
        map: { [key: string]: unknown };
      };
    };
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: unknown };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询用户可查看文件类型信息 */
  queryFileTypeUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** moduleCode */
        moduleCode: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«TypeListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 通过角色id查询文件类型ids */
  queryFileTypeIdsByRoleIdUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** roleId */
        roleId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«string»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 保存角色文件类型 */
  saveRoleFileTypesUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 角色id */
        id: string;
      };
      body: {
        /** 文件类型id列表 */
        roleTypeList: definitions["RoleType"][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  problemFeedbackAfterApprovalUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** data */
        data: { [key: string]: unknown };
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  problemFeedbackInitUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** data */
        data: { [key: string]: unknown };
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
