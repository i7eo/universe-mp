/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/audit/getTodoList": {
    post: operations["getTodoListUsingPOST"];
  };
  "/audit/getTodoListNum": {
    post: operations["getTodoListNumUsingPOST"];
  };
  "/error": {
    get: operations["handlerUsingGET"];
    put: operations["handlerUsingPUT"];
    post: operations["handlerUsingPOST"];
    delete: operations["handlerUsingDELETE"];
    options: operations["handlerUsingOPTIONS"];
    head: operations["handlerUsingHEAD"];
    patch: operations["handlerUsingPATCH"];
  };
  "/search/company/listPager": {
    post: operations["companySearchListPagerUsingPOST"];
  };
  "/search/company/{searchValue}": {
    post: operations["companySearchUsingPOST"];
  };
  "/search/deleteAllHistory": {
    post: operations["deleteAllHistoryUsingPOST"];
  };
  "/search/deleteSignHistory/{searchValue}": {
    post: operations["deleteHistoryUsingPOST"];
  };
  "/search/deleteSingleCompanyHistory/company/{companyCode}": {
    post: operations["deleteHistoryCompanyUsingPOST"];
  };
  "/search/history": {
    post: operations["historyUsingPOST"];
  };
  "/search/history/company": {
    post: operations["historyCompanyUsingPOST"];
  };
  "/search/listPager": {
    post: operations["listPagerUsingPOST"];
  };
  "/search/saveSingleCompanyHistory/company/{companyCode}": {
    post: operations["saveHistoryCompanyUsingPOST"];
  };
  "/ssoLogin/kingdee": {
    get: operations["kingdeeUsingGET"];
  };
}

export interface definitions {
  /** ActRuTaskListVo */
  ActRuTaskListVo: {
    /**
     * Format: int32
     * @description 应用Id
     */
    appId?: number;
    /** @description 系统标识 */
    appSn?: string;
    /** @description 审批人工号 */
    assignee?: string;
    /** @description 审批人名称 */
    assigneeName?: string;
    /** @description 业务key */
    businessKey?: string;
    /** @description 流程分类 */
    categoryName?: string;
    /**
     * Format: date-time
     * @description 任务创建时间
     */
    createTime?: string;
    /** @description 表单名称 */
    formName?: string;
    /** @description 任务名称 */
    name?: string;
    /** @description 流程实例父id */
    parentId?: string;
    /** @description 流程定义id */
    processDefinitionId?: string;
    /** @description 流程实例的id */
    processInstanceId?: string;
    /**
     * Format: date-time
     * @description 流程创建时间
     */
    startTime?: string;
    /** @description 流程创建人工号 */
    startUserId?: string;
    /** @description 流程创建人名称 */
    startUserName?: string;
    /**
     * Format: int32
     * @description 任务状态 1.审批中 2.驳回 3.撤回 4.终止 5.办结
     */
    status?: number;
    /** @description 任务定义key */
    taskDefKey?: string;
    /** @description 任务id */
    taskId?: string;
    /** @description 任务分类 */
    taskType?: string;
  };
  /** AddressBean */
  AddressBean: {
    /**
     * Format: int32
     * @description 城市
     */
    city?: number;
    /** @description 市名称 */
    cityName?: string;
    /**
     * Format: int32
     * @description 市区
     */
    district?: number;
    /** @description 区名称 */
    districtName?: string;
    /**
     * Format: int32
     * @description 省份
     */
    province?: number;
    /** @description 省名称 */
    provinceName?: string;
  };
  /** AuditNumVo */
  AuditNumVo: {
    /**
     * Format: int32
     * @description 系统appId 0-全部
     */
    appId?: number;
    /**
     * Format: int32
     * @description 数量
     */
    num?: number;
  };
  /** DictVo */
  DictVo: {
    /** @description 主键id */
    id?: string;
    /** @description 名称 */
    name?: string;
  };
  /** IndustrySearchDto */
  IndustrySearchDto: {
    /** @description 应用标签id */
    application?: string;
    /** @description 行业id */
    industry?: string;
    /** @description 技术标签id */
    technical?: string;
  };
  /** PagerQueryBodyModel */
  PagerQueryBodyModel: {
    dir?: string;
    /** Format: int32 */
    limit?: number;
    /** Format: int32 */
    page?: number;
    sort?: string;
  };
  /** PagerQueryBody«PortalSearchParam» */
  "PagerQueryBody«PortalSearchParam»": {
    filter?: definitions["PortalSearchParam"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«TodoFilter» */
  "PagerQueryBody«TodoFilter»": {
    filter?: definitions["TodoFilter"];
    model?: definitions["PagerQueryBodyModel"];
  };
  /** PagerQueryBody«string» */
  "PagerQueryBody«string»": {
    filter?: string;
    model?: definitions["PagerQueryBodyModel"];
  };
  /** Pager«ActRuTaskListVo» */
  "Pager«ActRuTaskListVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["ActRuTaskListVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«PortalSearchVo» */
  "Pager«PortalSearchVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["PortalSearchVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** Pager«SearchCompanyVo» */
  "Pager«SearchCompanyVo»": {
    /** Format: int32 */
    currentPage?: number;
    hasNextPage?: boolean;
    hasPreviousPage?: boolean;
    isFirstPage?: boolean;
    isLastPage?: boolean;
    navigatePageNumbers?: number[];
    /** Format: int32 */
    navigatePages?: number;
    /** Format: int32 */
    pageCount?: number;
    /** Format: int32 */
    pageSize?: number;
    result?: definitions["SearchCompanyVo"][];
    /** Format: int64 */
    total?: number;
  };
  /** PortalSearchParam */
  PortalSearchParam: {
    /** @description 注册地 */
    addressList?: definitions["AddressBean"][];
    /** @description 追投 */
    appendInvest?: boolean;
    /** @description 应用标签ids */
    applicationTagIds?: string[];
    /**
     * Format: int32
     * @description 客户分类(科服数据字典)
     */
    classify?: number;
    /** @description 行业ids */
    industryIds?: string[];
    /** @description 行业技术应用标签idList */
    industrySearchList?: definitions["IndustrySearchDto"][];
    /**
     * Format: int32
     * @description 是否中科院项目
     */
    isCas?: number;
    /** @description 最大——投资总额 */
    maxAmount?: string;
    /**
     * Format: date-time
     * @description 最大——首投时间
     */
    maxContractTimeFirst?: string;
    /** @description 最大——最新估值 */
    maxLatestValuation?: string;
    /** @description 最小——投资总额 */
    minAmount?: string;
    /**
     * Format: date-time
     * @description 最小——首投时间
     */
    minContractTimeFirst?: string;
    /** @description 最小——最新估值 */
    minLatestValuation?: string;
    /** @description 科服部门 1-品宣 2-投行 3-政策咨询 6-培训 */
    poeDeptList?: number[];
    /**
     * Format: int32
     * @description 项目来源id
     */
    responsibleAppId?: number;
    /** @description 关键字 */
    searchValue?: string;
    /**
     * Format: int32
     * @description 持有状态 1退出  2在投
     */
    status?: number;
    /**
     * Format: int32
     * @description tab 1-客户 2-注册地 3-行业
     */
    tab?: number;
    /** @description 技术标签ids */
    technicalTagIds?: string[];
  };
  /** PortalSearchVo */
  PortalSearchVo: {
    /** @description 注册地 */
    address?: string;
    /** @description 投资总额 */
    amount?: number;
    /** @description 是否追投 */
    appendInvest?: boolean;
    /** @description 应用标签ids */
    applicationTagIds?: string[];
    /** @description 应用标签List */
    applicationTagList?: definitions["DictVo"][];
    /**
     * Format: int32
     * @description 城市
     */
    city?: number;
    /** @description 客户分类 */
    classificationValue?: definitions["DictVo"];
    /**
     * Format: int32
     * @description 客户分类(科服数据字典)
     */
    classify?: number;
    /** @description 企业认定标签 */
    companyCertList?: string[];
    /** @description 公司code */
    companyCode?: string;
    /** @description 公司名称 */
    companyName?: string;
    /**
     * Format: date-time
     * @description 首投时间
     */
    contractTimeFirst?: string;
    /**
     * Format: int32
     * @description 创建人
     */
    createBy?: number;
    /** @description 创建人名称 */
    createName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    createTime?: string;
    /**
     * Format: int32
     * @description 市区
     */
    district?: number;
    /** @description id */
    id?: string;
    /** @description 行业(高亮) */
    industry?: string;
    /** @description 行业id */
    industryId?: string;
    /** @description 行业 */
    industryList?: definitions["DictVo"][];
    /**
     * Format: int32
     * @description 是否中科院项目(0:否1:是)
     */
    isCas?: number;
    /** @description 最新估值 */
    latestValuation?: number;
    /** @description 科服项目 1-品宣 2-投行 3-政策咨询 6-培训 */
    poeDeptList?: number[];
    /**
     * Format: int32
     * @description 省份
     */
    province?: number;
    /**
     * Format: int32
     * @description 项目来源id
     */
    responsibleAppId?: number;
    /** @description 持有状态 */
    status?: string;
    /** @description 技术标签ids */
    technicalTagIds?: string[];
    /** @description 技术标签List */
    technicalTagList?: definitions["DictVo"][];
    /**
     * Format: int32
     * @description 更新人
     */
    updateBy?: number;
    /** @description 更新人名称 */
    updateName?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    updateTime?: string;
  };
  /** ResultEntity«List«AuditNumVo»» */
  "ResultEntity«List«AuditNumVo»»": {
    code?: string;
    data?: definitions["AuditNumVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«SearchCompanyVo»» */
  "ResultEntity«List«SearchCompanyVo»»": {
    code?: string;
    data?: definitions["SearchCompanyVo"][];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«List«string»» */
  "ResultEntity«List«string»»": {
    code?: string;
    data?: string[];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«ActRuTaskListVo»» */
  "ResultEntity«Pager«ActRuTaskListVo»»": {
    code?: string;
    data?: definitions["Pager«ActRuTaskListVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«PortalSearchVo»» */
  "ResultEntity«Pager«PortalSearchVo»»": {
    code?: string;
    data?: definitions["Pager«PortalSearchVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«Pager«SearchCompanyVo»» */
  "ResultEntity«Pager«SearchCompanyVo»»": {
    code?: string;
    data?: definitions["Pager«SearchCompanyVo»"];
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«boolean» */
  "ResultEntity«boolean»": {
    code?: string;
    data?: boolean;
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«object» */
  "ResultEntity«object»": {
    code?: string;
    data?: { [key: string]: unknown };
    msg?: string;
    success?: boolean;
  };
  /** ResultEntity«string» */
  "ResultEntity«string»": {
    code?: string;
    data?: string;
    msg?: string;
    success?: boolean;
  };
  /** SearchCompanyVo */
  SearchCompanyVo: {
    /** @description 公司code */
    companyCode?: string;
    /** @description 公司名称 */
    companyName?: string;
  };
  /** TodoFilter */
  TodoFilter: {
    /**
     * Format: int32
     * @description 应用id,不传查全部
     */
    appId?: number;
  };
}

export interface operations {
  getTodoListUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body: definitions["PagerQueryBody«TodoFilter»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«ActRuTaskListVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getTodoListNumUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«AuditNumVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingGET: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPUT: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  handlerUsingDELETE: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingOPTIONS: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingHEAD: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  handlerUsingPATCH: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«object»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  companySearchListPagerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body?: definitions["PagerQueryBody«string»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«SearchCompanyVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  companySearchUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** searchValue */
        searchValue: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«SearchCompanyVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteAllHistoryUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteHistoryUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 删除的文字 */
        searchValue: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  deleteHistoryCompanyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 公司Code */
        companyCode: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  historyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«string»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  historyCompanyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«List«SearchCompanyVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  listPagerUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      body: {
        /** body */
        body?: definitions["PagerQueryBody«PortalSearchParam»"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«Pager«PortalSearchVo»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  saveHistoryCompanyUsingPOST: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
      path: {
        /** 公司Code */
        companyCode: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  kingdeeUsingGET: {
    parameters: {
      header: {
        /** appId */
        ai?: string;
        /** deviceId */
        di?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["ResultEntity«string»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
